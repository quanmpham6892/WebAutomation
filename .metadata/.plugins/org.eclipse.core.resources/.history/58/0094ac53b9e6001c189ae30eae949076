package classThree;

public class StringFunTimes {

	public static void main(String[] args) {
		
		//String 
		String a = "apple";
		
		//Length()
		//String length() - length of the string
		//.length() method will count the string starting from 1 to the end of the sentence NOTE: including spaces
		System.out.println(a.length());
		//alternative way to use .length()
		System.out.println("apples are disgusting".length());
		
		
		//String - charAt()
		//String charAt() - returns a char value at the given index number
		//Important: when you're counting index, you always start at 0
		// APPLE -index 0 would be character A in this example
		//You will need to provide a number in the parentheses
		//the below example will print out the character at index 1, which is "p"
		//if I ever need a single character based on the index value, you will need to use charAt() method
		System.out.println(a.charAt(1));
		
		
		
		//concat()
		//String concat() - combines specified string at the end of this string at the end of this string
		//NOTE:this method will only accept a String as the dataType
		//the example below will give you "apple red"
		System.out.println(a.concat(" red"));
		//Now I want to print out "apple red Hello"
		System.out.println(a.concat(" red").concat(" Hello"));
		
		
		//contains()
		//String contains() - returns true if chars are found in the string
		System.out.println(a.contains("1"));
		
		
		
		
		
		
		
		
		
		
		
		
		//Most used String Functions - When you are writing any method, use the functions below to ensure the string condition is there
		
	
		//String contains() - returns true if chars are found in the string
		//String startsWith() - checks if this string starts with given prefix
		//String endsWith() - checks if this string ends with given suffix
		//String equals() - compares the contents of two given strings
		//String indexOf() - returns index of given character value or substring
			//index counting starts from zero, then goes to 1 then 2 then 3; like that
		//String isEmpty() - checks if this string is empty
		//String replace() - returns a string replacing all the old char to new char
		//String substring() - returns a part of the string
		//String toCharArray() - converts this string into character array
		//String toLowerCase() - returns the string in uppercase letter
		//String trim() - eliminates leading and trailing spaces
	}

}
